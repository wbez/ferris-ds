// Button (bez-button)
//
// Buttons rely on color helpers for background and text color. The variations are simply sizes. One catch is that are buttons run small in sizes so the names aren't true to their padding and font-size assignments.
//
// .bez-button--primary - Red background
// .bez-button--dark - Dark background
// .bez-button--round - For the most part, buttons associated with the player are rounded.
// .bez-button--circle - Action icons, etc.
// .bez-button--s - Small button
// .bez-button--l - Large button
//
// Markup: 6-components/button/bez-button.html
//
// Styleguide 6.1.1
.bez-button {
  $button-height: 8em / 3;

  @include font-setting('primary');
  background-color: $legacy-color-ghost-white;
  border: 2px solid $legacy-color-darker-middle-grayish-white;
  border-radius: $border-radius-b;
  color: $legacy-color-gray;
  font-weight: 700;
  font-size: 1rem;
  height: $button-height;
  letter-spacing: $font-letter-spacing;
  line-height: calc(#{$button-height} - 2 * 2px);
  padding: 0 1em;
  text-align: center;
  text-transform: uppercase;
  transition: background-color 0.3s, border-color 0.3s, color 0.3s;

  display: inline-flex;
  justify-content: space-evenly;
  align-items: center;

  @include media-hover {
    background-color: $legacy-color-ghost-whitish;
    color: $legacy-color-gray;
  }

  &--primary {
    background-color: $color-primary;
    border-color: transparent;
    color: $color-on-primary;

    @include media-hover {
      background-color: $color-primary-dark;
      color: $color-on-primary-dark;
    }
  }

  &--dark {
    background-color: transparentize(#000, .4);
    border-color: transparent;
    color: transparentize(white, .05);

    @include media-hover {
      background-color: transparentize(#000, .2);
      color: transparentize(white, .05); 
    }
  }

  &--circle {
    border-radius: 50%;
    width: $button-height;
    padding: 0;
  }

  &--round {
    border-radius: $border-radius-l;
  }

  &--s {
    font-size: .75rem;
  }

  &--s &__sprite {
    transform: scale(.75);
    transform-origin: center;
  }

  &--l {
    font-size: 1.75rem;
  }

  &__sprite {
    vertical-align: middle;
    position: relative;
    top: -2px;
  }

  &--circle &__sprite {
    vertical-align: unset;
    top: unset;
  }
}

.play_button {
  @include setIcon($play_content);
}

.queue_button {
  @include setIcon($queue);
}

// Button (c-button)
//
// Experimental: Buttons rely on color helpers for background and text color. The variations are simply sizes. One catch is that are buttons run small in sizes so the names aren't true to their padding and font-size assignments.
//
// .c-button--l - Uses size-l for font size and padding
// .c-button--s - One step down from default
// .c-button--xs - Two steps down from default
// .c-button--circle - Circular button (experimentally used for back to top)
// .c-button--outline - Hover effect of outline (used on social)
// .c-button--compact - Removes vertical padding (used on social)
// .c-button--round - For the most part, buttons associated with revenue are rounded.
//
// Markup: 6-components/button/button.html
//
// Styleguide 6.1.1
.c-button {
  background-color: $color-primary;
  border: none;
  border-radius: 0;
  cursor: pointer;
  font-weight: 700;
  font-size: $size-xs;
  letter-spacing: $font-letter-spacing;
  padding: $size-xs;
  text-align: center;
  text-transform: uppercase;
  transition: opacity 0.3s;

  &:disabled,
  &[disabled] &:not([disabled='false']) {
    cursor: initial;
    opacity: 0.4;

    &:hover,
    &:active {
      opacity: 0.4;
    }
  }

  @include media-hover {
    opacity: 0.7;
  }

  &--l {
    font-size: $size-l;
    padding: $size-l;
  }

  &--s {
    font-size: $size-xxs;
    padding: $size-xxs;
  }

  &--xs {
    font-size: $size-xxxs;
    padding: $size-xxxs;
  }

  &--circle {
    border-radius: 50%;
    width: 4rem;
    height: 4rem;
    position: relative;
  }

  &__inner {
    color: #fff;
  }

  &--outline {
    border: 2px solid currentColor;
    transition: background-color 0.3s;

    @include media-hover {
      background-color: #fff;
      color: currentColor;
      opacity: 1;

      .c-button__inner {
        color: currentColor;
      }
    }
  }

  &--compact {
    padding-top: 0;
    padding-bottom: 0;
  }

  &--round {
    border-radius: $border-radius-l;
  }
}

// Link button (c-link-button)
//
// Experimental: Sometimes, we need buttons to look like links (see Talk embed log in/log out buttons)
//
// Markup: <button class="c-link-button">Click me, I'm Irish</button>
//
// Styleguide 6.1.1
//
.c-link-button {
  @include underlined-link;
  cursor: pointer;
  line-height: normal;
}
