// @mixin font-setting
//
// This will help us move away from silent classes for setting font-families. It still keeps our two main font-family rules in one place. <code class="ds-breathe-m">p { @include font-setting('secondary') }</code>
//
// $type = 'primary' - Version of font-setting. Options: primary | secondary
//
//
// Styleguide 2.1.1
@mixin font-setting($type: 'primary') {
  @if $type == 'primary' {
    font-family: $font-family-primary-fallback;

    .fonts-loaded & {
      font-family: $font-family-primary;
    }
  }

  @if $type == 'secondary' {
    font-family: $font-family-secondary-fallback;

    .fonts-loaded & {
      font-family: $font-family-secondary;
    }
  }
  
  @if $type == 'sans' {
    font-family: $font-family-primary-fallback;

    .fonts-loaded & {
      font-family: $font-family-primary;
    }
  }
  
  @if $type == 'serif' {
    font-family: $font-family-secondary-fallback;

    .fonts-loaded & {
      font-family: $font-family-secondary;
    }
  }

}

// @mixin underlined-link
//
// To use this mixin, apply to an `a` tag to add special link style. Example: <code class="ds-breathe-m"> a { @include underlined-link }</code>
//
// $subtle = false - Whether this is a subtle or default variation. Options: true | false
//
// Styleguide 2.1.2
//
@mixin underlined-link($subtle: false, $border-width: 1px, $border-top: 2 * $border-width, $link-color: $color-primary) {
  // Set color vars
  $border-color: transparentize($link-color, 0.4);
  $border-hover-color: transparentize($link-color, 0.2);

  @if ($subtle == false) {
    // Include on non hover state if not subtle (default)
    box-shadow: inset 0 #{-($border-top - $border-width)} 0 0 #fff,
      inset 0 #{-$border-top} 0 0 $border-color;
  }
  
  font-weight: inherit;
  color: inherit;
  transition: box-shadow 0.2s ease, color 0.2s ease;

  &:hover,
  &:focus {
    box-shadow: inset 0 #{-($border-top - (2 * $border-width))} 0 0 #fff,
      inset 0 #{-$border-top} 0 0 $border-hover-color;
    color: $link-color;
    text-decoration: none;
  }
}

// @mixin underlined-link-parent
//
// This is an extension of the `underlined-link` mixin. This version is applied to a parent to force all descendant `a` tags get a special link style. Example: <code class="ds-breathe-m"> .text-block-with-subtle-links { @include underlined-link-parent('true') }</code>
//
// $subtle = false - Whether or not this a subtle or default variation. Options: true | false
//
// Styleguide 2.1.3
//
@mixin underlined-link-parent($subtle: false) {
  a:not(.t-unlink) {
    @include underlined-link($subtle, $border-width: 0.1ex, $border-top: 0.3ex);
  }
}

// @mixin gap
//
// This is to account for the eminent deprecation of [`grid-gap`](https://developer.mozilla.org/en-US/docs/Web/CSS/gap). Some browsers honor `gap`, while others are living in the past with `grid-gap`. This keeps us working for both names. Eventually, we can remove this mixin in favor of just using gap. The new `gap` naming is introduced on Chrome 68+, Safari 11.2, Firefox 61+, and Edge 16+<br>Example: `.my-grid { @include gap($size-m) }`
//
// $size = $size-b - Size of gap
//
// Styleguide 2.1.3
//
@mixin gap($size: $size-b) {
  grid-gap: $size;
  gap: $size;
}

// @mixin box-shadow-default
//
// This is just a general purpose box-shadow, written out for easy reference. 
//
// Styleguide 2.1.4
//
@mixin box-shadow-default() {
  box-shadow: 0px 0px 3px 0px $color-box-shadow-default;
}